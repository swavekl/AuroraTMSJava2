### login
POST https://{{host}}:{{port}}/api/users/login
Accept: application/json, text/plain, */*
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.9
Access-Control-Allow-Credentials: true
Access-Control-Allow-Origin: https://{{host}}:4200
Host: {{host}}:{{port}}
Origin: https://{{host}}:4200
Referer: https://{{host}}:4200/login/signin
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Content-Type: application/json;charset=UTF-8
Pragma: no-cache
Strict-Transport-Security: max-age=31536000 ; includeSubDomains
Vary: Origin
Vary: Access-Control-Request-Method
Vary: Access-Control-Request-Headers
X-Content-Type-Options: nosniff
X-Frame-Options: DENY
X-XSS-Protection: 1; mode=block
Connection: keep-alive

{   "email": "{{juliausername}}",   "password": "{{juliapassword}}" }
> {%
 client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
client.global.set("accessToken", response.body.access_token);
%}

###
GET https://{{host}}:{{port}}/api/usattplayers?firstName=Samson&lastName=Dubina&page=0&size=3
Accept: application/json
Authorization: Bearer {{accessToken}}

> {%
 client.test("Request executed successfully", function() {
      client.assert(response.status === 200, "Response status is not 200");
      client.assert(response.body[0].firstName === "Samson", "wrong player name")
      client.assert(response.body[0].lastName === "Dubina", "wrong player last name")
      client.assert(response.body[0].membershipId === 9051, "wrong player membership id")
    });
client.global.set("membershipId", response.body[0].membershipId);
%}

###
GET https://{{host}}:{{port}}/api/usattplayers?membershipId={{membershipId}}
Accept: application/json
Authorization: Bearer {{accessToken}}

> {%
 client.test("Request executed successfully", function() {
      client.assert(response.status === 200, "Response status is not 200");
      client.assert(response.body[0].firstName === "Samson", "wrong player name")
      client.assert(response.body[0].lastName === "Dubina", "wrong player last name")
      client.assert(response.body[0].membershipId === 9051, "wrong player membership id")
    });

%}

###
