### login
POST https://{{host}}:{{port}}/api/users/login
Accept: application/json, text/plain, */*
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.9
Access-Control-Allow-Credentials: true
Access-Control-Allow-Origin: https://{{host}}:{{clientport}}
Host: {{host}}:{{port}}
Origin: https://{{host}}:{{clientport}}
Referer: https://{{host}}:{{clientport}}/login/signin
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Content-Type: application/json;charset=UTF-8
Pragma: no-cache
Strict-Transport-Security: max-age=31536000 ; includeSubDomains
Vary: Origin
Vary: Access-Control-Request-Method
Vary: Access-Control-Request-Headers
X-Content-Type-Options: nosniff
X-Frame-Options: DENY
X-XSS-Protection: 1; mode=block
Connection: keep-alive

{   "email": "{{tdusername}}",   "password": "{{tdpassword}}" }
> {%
 client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert((response.body.access_token !== null) && (response.body.access_token.length > 900), "No access token retrieved");
    });
client.global.set("accessToken", response.body.access_token);
client.log('accessToken is: ' + response.body.access_token);
client.global.set("userProfileId", response.body.id);
%}


###
GET https://{{host}}:{{port}}/api/account/exists/{{userProfileId}}
Authorization: Bearer {{accessToken}}
Accept: application/json, text/plain, */*

{}
> {%
 client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
        client.assert(response.body.accountExists === false, "Response body is empty");
    });
client.log('response is: ' + response.body);
%}

###
POST https://{{host}}:{{port}}/api/account/create/{{userProfileId}}
Authorization: Bearer {{accessToken}}
Accept: application/json, text/plain, */*

{}
> {%
 client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
        client.assert(response.body.accountLinkURL !== "", "account link url is empty");
    });
client.log('response is: ' + response.body);
%}
