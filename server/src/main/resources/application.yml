spring.jpa.hibernate.ddl-auto: update
spring.datasource:
  driver-class-name: com.mysql.jdbc.Driver
  url: jdbc:mysql://localhost:3306/auroratmsspring

spring:
  liquibase:
    enabled: false

logging.level.org.hibernate.SQL: DEBUG
#logging.level.org.hibernate.type: TRACE

#logging.level.org.springframework.security: TRACE
#logging:
#  level:
#    org:
#      springframework:
#        security:
#          web:
#            csrf:
#              CsrfFilter: TRACE
#org:
#  springframework:
#    security:
#      web:
#        access:
#logging:
#  level:
#    "liquibase" : info

#spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: https://dev-758120.oktapreview.com/oauth2/default/v1/keys
# this URL returns the jwk-set-uri in the "jwks_uri" field
# https:///dev-758120.okta.com/oauth2/default/.well-known/oauth-authorization-server
okta:
  oauth2:
    redirectUri: https://gateway-pc:4200/authorization-code/callback
    audience: api://default
  client:
    connectionTimeout: 30 # seconds
    orgUrl: https://dev-758120.oktapreview.com
    requestTimeout: 0
    rateLimit:
      maxRetries: 4

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl:
  key-store-type: PKCS12
  # The path to the keystore containing the certificate
  key-store: classpath:keystore/keystore.p12
  # The password used to generate the certificate
  key-store-password: exportpassword
  # The alias mapped to the certificate
  key-alias: tomcat

server:
  port: 8443
