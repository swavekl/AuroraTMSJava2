buildscript {
    ext {
        springBootVersion = '2.6.0'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'war'

group = 'com.auroratms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

def oktaSdkVersion = "3.0.1"
def oktaAuthnSdkVersion = "2.0.0"

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-starter-security') {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server")
//    // event bus for sending emails in another thread
//    implementation("io.projectreactor:reactor-bus")
    // email sender support
    implementation("org.springframework.boot:spring-boot-starter-mail")
    // email template engine
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    // object level security using Access Control Lists
    implementation "org.springframework.security:spring-security-acl"
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework:spring-context-support"

    // Hashicorp Vault
    implementation "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation "org.springframework.vault:spring-vault-core:2.3.2"
    // for vault CRUD repository support
    implementation "org.springframework.data:spring-data-keyvalue"

    // caching
    implementation "net.sf.ehcache:ehcache-core:2.6.11"

    implementation('com.okta.spring:okta-spring-boot-starter:2.0.0')
    implementation('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.4.0')

    // MySQL JDBC driver
    runtimeOnly('mysql:mysql-connector-java')
    // for applying changes to database as a result of schema change
    implementation "org.liquibase:liquibase-core:4.3.1"

    // lombok for generating getter sand setters
    compileOnly('org.projectlombok:lombok:1.18.16')
    annotationProcessor ('org.projectlombok:lombok:1.18.16')

    // unit and integration testing
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    // testing access control to services
    testImplementation('org.springframework.security:spring-security-test')
    // old Junit 4 unit testing
    implementation 'org.junit.vintage:junit-vintage-engine:5.7.0'

    implementation ('com.fasterxml.jackson.core:jackson-core:2.13.0')

    // okta APIs
    implementation ("com.okta.sdk:okta-sdk-api:${oktaSdkVersion}")
    implementation ("com.okta.sdk:okta-sdk-impl:${oktaSdkVersion}")
    runtimeOnly ("com.okta.sdk:okta-sdk-httpclient:${oktaSdkVersion}")
    implementation("com.okta.authn.sdk:okta-authn-sdk-api:${oktaAuthnSdkVersion}")
    runtimeOnly ("com.okta.authn.sdk:okta-authn-sdk-impl:${oktaAuthnSdkVersion}")
    runtimeOnly ('javax.validation:validation-api:2.0.0.Final')

    // reading and parsing HTML
    implementation ('org.jsoup:jsoup:1.13.1')

    // reading and parsing CSV files
    implementation('com.opencsv:opencsv:5.3')

    // Googl GSON parser for parsing JSON files
    implementation ('com.google.code.gson:gson:2.8.9')

    // credit card payments & refunds
    implementation "com.stripe:stripe-java:19.45.0"

    // match cards PDF generation
    implementation 'com.itextpdf:itext7-core:7.2.5'

//    testImplementation ("com.auroratms:com.aurora.server.main")
    // websocket implementation
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation "org.springframework.security:spring-security-messaging"
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'

    // For external message broker like RabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'
    implementation 'org.springframework.amqp:spring-rabbit:2.4.1'

    // quartz scheduler for cleanup job
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    // make this project depend on building the client portion of the project
//    implementation (project(':client'))
}

//configurations {
//    all*.exclude module : 'spring-boot-starter-logging'
//}

task copyAngularApp (type: Copy) {
    from '../client/dist/client'
    into './build/resources/main/static'
}

processResources.dependsOn(copyAngularApp)
//jar.dependsOn(copyAngularApp)


task prepareKotlinBuildScriptModel {

}
